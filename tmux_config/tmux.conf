unbind C-b
set -g prefix C-a
setw -g mode-keys vi

# move arount panes wiht hjkl, as one would in vim after C-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by,
# only one at a time can be slow
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

#将r 设置为加载配置文件，并显示"reloaded!"信息
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# zoom pane <-> window
##http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/examples/tmux-zoom.sh
bind C-z run ". ~/.tmux/tmux-zoom.sh"

#create new window and cd to current working directory
bind c new-window -c "#{pane_current_path}"

# split window like vim
# vim's defination of a horizontal/vertical split is revised from tumx's
# bind s split-window -h "#{pane_current_path}"
# bind v split-window -v "#{pane_current_path}"

bind v split-window -c "#{pane_current_path}"
bind s split-window -h -c "#{pane_current_path}"

# choose tree
bind e choose-tree

# invoke reattach-to-user-namespace every time a new window/pane opens
set-option -g default-command "reattach-to-user-namespace -l zsh"

# start selecting text typing 'v' key (once you are in copy mode)
bind-key -t vi-copy v begin-selection
# copy selected text to the system's clipboard
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# 状态栏
# 颜色
  set -g status-bg black
  set -g status-fg white
# 对齐方式
  set-option -g status-justify centre
# 左下角
  set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'
  set-option -g status-left-length 20
# 窗口列表
  setw -g automatic-rename on
  set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
  set-window-option -g window-status-current-format '#[fg=cyan,bold]#I#[fg=blue]:#[fg=cyan]#W#[fg=dim]'
# 右下角
  set -g status-right '#[fg=green][#[fg=cyan]%Y-%m-%d#[fg=green]]'
